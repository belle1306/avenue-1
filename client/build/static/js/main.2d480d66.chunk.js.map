{"version":3,"sources":["App.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","_super","call","state","input","tasks","complete","addTask","bind","assertThisInitialized","updateTask","deleteTask","e","preventDefault","setState","target","value","_this2","fetch","then","res","json","catch","error","console","log","_this3","method","headers","Content-Type","body","JSON","stringify","text","componentDidMount","identity","_this4","checked","id","_this5","i","_this6","_this7","react_default","a","createElement","src","alt","className","onChange","updateInput","onClick","length","map","k","key","type","aria-label","updateComplete","aria-describedby","defaultValue","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2d480d66.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: \"\",\r\n      tasks: [],\r\n      complete: false\r\n    };\r\n    this.addTask = this.addTask.bind(this);\r\n    this.updateTask = this.updateTask.bind(this);\r\n    this.deleteTask = this.deleteTask.bind(this);\r\n  }\r\n\r\n  updateInput(e) {\r\n    e.preventDefault();\r\n    this.setState({\r\n      input: e.target.value\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"/api/todos\")\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        // upon success, update tasks\r\n        //console.log(json);\r\n        this.setState({\r\n          tasks: json\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  addTask(e) {\r\n    e.preventDefault();\r\n    fetch(\"/api/todos\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        text: this.state.input,\r\n        complete: this.state.complete\r\n      })\r\n    })\r\n      .then(res => {\r\n        res.json();\r\n        this.componentDidMount();\r\n        console.log(this.state.tasks);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  updateComplete(e, identity) {\r\n    console.log(e.target.value, \":checkbox event value\", e.target.checked, \":checkbox event checked\")\r\n    this.setState({\r\n      complete: e.target.checked\r\n    });\r\n    fetch(\"/api/todos/\" + identity, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        id: identity,\r\n        // text: e.target.value,\r\n        complete: this.state.complete\r\n      })\r\n    })\r\n    .then(res => {\r\n      res.json();\r\n      this.componentDidMount();\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  updateTask(e, identity) {\r\n    fetch(\"/api/todos/\" + identity, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        id: identity,\r\n        text: e.target.value,\r\n        // complete: this.state.complete\r\n      })\r\n    })\r\n      .then(res => {\r\n        res.json();\r\n        this.componentDidMount();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  // // Updating the data from the browser side not directly influenced by the server / fetch\r\n  // const tasksIndex = this.state.tasks.findIndex(t => t.id === identity);\r\n\r\n  // const changedTask = { ...this.state.tasks[tasksIndex] }; //points to the copy of the task that you are wanting to change\r\n  // changedTask.text = e.target.value;\r\n\r\n  // const changedTasks = [...this.state.tasks]; //create a copy of the task lists that is unchanged\r\n  // changedTasks[tasksIndex] = changedTask; //change happens here\r\n\r\n  // this.setState({\r\n  //   tasks: changedTasks\r\n  // });\r\n  // console.log(this.state.tasks);\r\n\r\n  deleteTask(e, i) {\r\n    console.log(i);\r\n    fetch(\"/api/todos/\" + i, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        res.json();\r\n        this.componentDidMount();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  //original code from line 104 (using double fetch)\r\n  //   .then(() => {\r\n  //     fetch(\"/api/todos/\")\r\n  //       .then(response => response.json())\r\n  //       .then(data => {\r\n  //         this.setState({\r\n  //           tasks: data\r\n  //         });\r\n  //       })\r\n  //       .catch(e => console.error(e));\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <img src=\"https://www.logolynx.com/images/logolynx/2b/2b696958d35a839820ee22886375cf9f.jpeg\" alt=\"nike logo\"></img>\r\n          Just Do It. To Do List.\r\n        </header>\r\n\r\n        <div className=\"container center_div_form\">\r\n          <form className=\"row g-3\">\r\n            <div className=\"col-auto\">\r\n              <h3>Add Task</h3>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <input\r\n                className=\"form-control\"\r\n                onChange={e => this.updateInput(e)}\r\n              />\r\n            </div>\r\n            <div className=\"col-auto\">\r\n              <button\r\n                className=\"btn btn-warning\"\r\n                onClick={e => this.addTask(e)}\r\n              >\r\n                +\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"container center_div_tasknumber\">\r\n          <div className=\"badge rounded-pill bg-light text-dark\">\r\n            Number of Tasks Left :\r\n            <span className=\"badge rounded-pill bg-info text-dark\">\r\n              {this.state.tasks.length}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container center_div_tasklist\">\r\n          <div>\r\n            {this.state.tasks.map(k => {\r\n              return (\r\n                <div className=\"input-group input-group-sm mb-3\" key={k.id}>\r\n                  <input \r\n                    type=\"checkbox\"\r\n                    checked=\"\" //\"checked\"\r\n                    aria-label=\"Checkbox for following text input\"\r\n                    onChange={e => this.updateComplete(e, k.id)}/>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    defaultValue={k.text}\r\n                    id={k.id}\r\n                    onChange={e => this.updateTask(e, k.id)}\r\n                  />\r\n                  <div className=\"input-group-append\">\r\n                    <button\r\n                      className=\"btn-close btn-close-white\"\r\n                      aria-label=\"Close\"\r\n                      onClick={e => this.deleteTask(e, k.id)}\r\n                    ></button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}